Assignment 5

This helps a lot, seirously:
	http://www.binaryhexconverter.com/

	In the vm_inspector, we check the arguments. If "-v" is passed, the overall maping of VA will be dump, for those pgds and ptes are not valid, they will show 0; If the pid is invalid, error messages will print.
	It will also allocate two pieces of memory: first is for fake_pgd, which have 2048 entries (size of UL each), the second one is called addr, which size is PTRS_PER_PGD * PAGE_SIZE. Errors of failure operations are returned.

	In system call, it traverses all pgd, in the meanwhile it traces the VA as well. for each pgd, it will find the related pte, the get that L2 table's base adress, remap that page to user space's addr, and store a point the that addr in fake_pgd.

How to invoke the program:
	Type "vm_inspector -v <pid>"
	-v: 	verbose - it will print the whole map of the process.
	<pid>:	pid of the process want to print its memory map. "-1" specified to "current" pid.

	Lack of input pid will get an error.

TESTING

We tested against Shih-Wei Li's test program pagemap to verify we got the correct output. For instance for an entry in Zygote we get:
0x1525	0xbea5c000		0xcf895		1	1	1	0	1

With Shih-Wei Li's program we get:
Vaddr: 0xbea5c000, Page_size: 4096, Entry_size: 8
Reading /proc/180/pagemap at 0x5f52e0
[0]0x95 [1]0xf8 [2]0xc [3]0x0 [4]0x0 [5]0x0 [6]0x0 [7]0x86
Result: 0x86000000000cf895
PFN: 0xcf895
